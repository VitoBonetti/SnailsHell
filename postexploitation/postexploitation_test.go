package postexploitation

import (
	"SnailsHell/config"
	"SnailsHell/model"
	"testing"
)

// setupTestConfig initializes a default configuration for tests.
func setupTestConfig() {
	if config.Cfg == nil {
		config.LoadConfig()
	}
}

// TestCheckFTPNoService ensures the function doesn't panic when no FTP port is open.
func TestCheckFTPNoService(t *testing.T) {
	setupTestConfig()
	host := model.NewHost("00:00:00:00:00:01")
	host.IPv4Addresses["127.0.0.1"] = true
	host.Ports[80] = model.Port{ID: 80, Service: "http"}

	// This test simply ensures the function runs without crashing when no FTP port is available.
	CheckFTPAnonymousLogin(host)

	if len(host.FTPResults) > 0 {
		t.Errorf("Expected 0 FTP results, but got %d", len(host.FTPResults))
	}
}

// TestCheckSSHNoService ensures the function doesn't panic when no SSH port is open.
func TestCheckSSHNoService(t *testing.T) {
	setupTestConfig()
	host := model.NewHost("00:00:00:00:00:02")
	host.IPv4Addresses["127.0.0.1"] = true
	host.Ports[80] = model.Port{ID: 80, Service: "http"}

	CheckSSHLogin(host)

	if len(host.SSHResults) > 0 {
		t.Errorf("Expected 0 SSH results, but got %d", len(host.SSHResults))
	}
}

// TestCheckSMBNoService ensures the function doesn't panic when no SMB port is open.
func TestCheckSMBNoService(t *testing.T) {
	setupTestConfig()
	host := model.NewHost("00:00:00:00:00:03")
	host.IPv4Addresses["127.0.0.1"] = true
	host.Ports[80] = model.Port{ID: 80, Service: "http"}

	CheckSMBUnauthenticatedAccess(host)

	if len(host.SMBResults) > 0 {
		t.Errorf("Expected 0 SMB results, but got %d", len(host.SMBResults))
	}
}

// NOTE: Full integration tests for these functions would require setting up live
// FTP, SSH, and SMB servers, which is beyond the scope of a simple unit test.
// These tests confirm that the functions correctly handle hosts that do NOT
// have the target services running.
